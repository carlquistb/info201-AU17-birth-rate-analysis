shiny::runApp()
runApp()
runApp()
library(dplyr)
shiny::runApp()
runApp()
runApp()
filtered <- final.GDP
runApp()
filtered <- final.birth %>% select(name,1960)
filtered <- final.birth %>% select(name,'1960')
runApp()
runApp()
runApp()
runApp()
year <- 1960
time <- toString(year)
filtered <- final.birth %>% select(name,time)
View(filtered)
runApp()
runApp()
bar.region <- plot_ly(data = final.birth, x = ~final.birth$name,
y= ~final.birth$time, type = 'bar',
hoverinfo = 'text',
# sets hover text
text = ~paste("Region:", filtered$name, "<br>","Value:",filtered$time))%>%
layout(xaxis= list(title = "Regions"),
yaxis= list(title = "Value"))
filtered <- final.birth %>% select(name, '1960')
bar.region <-
plot_ly(data = filtered, x = ~filtered$name,
y= ~filtered$'1960', type = 'bar',
hoverinfo = 'text',
# sets hover text
text = ~paste("Region:", filtered$name, "<br>","Value:",filtered$'1960')) %>%
layout(xaxis= list(title = "Regions"),
yaxis= list(title = "Value"))
filtered <- final.birth %>% select(name, '1960')
bar.region <-
plot_ly(data = filtered, x = ~filtered$name,
y= ~filtered$'1960', type = 'bar',
hoverinfo = 'text',
# sets hover text
text = ~paste("Region:", filtered$name, "<br>","Value:",filtered$'1960')) %>%
layout(xaxis= list(title = "Regions"),
yaxis= list(title = "Value"))
plot_ly(data = final.birth, x = ~final.birth$name,
y= ~final.birth$time, type = 'bar',
hoverinfo = 'text',
# sets hover text
text = ~paste("Region:", filtered$name, "<br>","Value:",filtered$time))%>%
layout(xaxis= list(title = "Regions"),
yaxis= list(title = "Value"))
time <- "1960"
plot_ly(data = final.birth, x = ~final.birth$name,
y= ~final.birth$'1960', type = 'bar',
hoverinfo = 'text',
# sets hover text
text = ~paste("Region:", filtered$name, "<br>","Value:",filtered$'1960'))%>%
layout(xaxis= list(title = "Regions"),
yaxis= list(title = "Value"))
bar.region <-
plot_ly(data = final.birth, x = ~final.birth$name,
y= ~final.birth$'1974', type = 'bar',
hoverinfo = 'text',
# sets hover text
text = ~paste("Region:", filtered$name, "<br>","Value:",filtered$'1974'))%>%
layout(xaxis= list(title = "Regions"),
yaxis= list(title = "Value"))
plot_ly(data = final.birth, x = ~final.birth$name,
y= ~final.birth$'1974', type = 'bar',
hoverinfo = 'text',
# sets hover text
text = ~paste("Region:", filtered$name, "<br>","Value:",filtered$'1974'))%>%
layout(xaxis= list(title = "Regions"),
yaxis= list(title = "Value"))
View(final.birth)
plot_ly(data = final.birth, x = ~final.birth$name,
y= ~final.birth$'1988', type = 'bar',
hoverinfo = 'text',
# sets hover text
text = ~paste("Region:", filtered$name, "<br>","Value:",filtered$'1988'))%>%
layout(xaxis= list(title = "Regions"),
yaxis= list(title = "Value"))
View(filtered)
View(filtered)
View(filtered)
plot_ly(data = final.birth, x = ~final.birth$name,
y= ~final.birth$'1988', type = 'bar',
hoverinfo = 'text',
# sets hover text
text = ~paste("Region:", final.birth$name, "<br>","Value:",final.birth$'1988'))%>%
layout(xaxis= list(title = "Regions"),
yaxis= list(title = "Value"))
runApp()
runApp()
year <- 1968
time <- toString(year)
print(time)
time.data<- final.birth %>% select(time)
View(time.data)
bar.region <- plot_ly(data = filtered, x = ~filtered$name,
y= ~time.data, type = 'bar',
hoverinfo = 'text',
# sets hover text
text = ~paste("Region:", filtered$name, "<br>","Value:",time.data))%>%
layout(xaxis= list(title = "Regions"),
yaxis= list(title = "Value"))
return(bar.region)
bar.region <- plot_ly(data = filtered, x = ~filtered$name,
y= ~time.data, type = 'bar',
hoverinfo = 'text',
# sets hover text
text = ~paste("Region:", filtered$name, "<br>","Value:",time.data))%>%
layout(xaxis= list(title = "Regions"),
yaxis= list(title = "Value"))
bar.region <-
plot_ly(data = final.birth, x = ~final.birth$name,
y= ~time.data, type = 'bar',
hoverinfo = 'text',
# sets hover text
text = ~paste("Region:", final.birth$name, "<br>","Value:",time.data))%>%
layout(xaxis= list(title = "Regions"),
yaxis= list(title = "Value"))
plot_ly(data = final.birth, x = ~final.birth$name,
y= ~time.data, type = 'bar',
hoverinfo = 'text',
# sets hover text
text = ~paste("Region:", final.birth$name, "<br>","Value:",time.data))%>%
layout(xaxis= list(title = "Regions"),
yaxis= list(title = "Value"))
View(time.data)
bar.region <-
plot_ly(data = final.birth, x = ~final.birth$name,
y= time.data, type = 'bar',
hoverinfo = 'text',
# sets hover text
text = ~paste("Region:", final.birth$name, "<br>","Value:",time.data))%>%
layout(xaxis= list(title = "Regions"),
yaxis= list(title = "Value"))
plot_ly(data = final.birth, x = ~final.birth$name,
y= time.data, type = 'bar',
hoverinfo = 'text',
# sets hover text
text = ~paste("Region:", final.birth$name, "<br>","Value:",time.data))%>%
layout(xaxis= list(title = "Regions"),
yaxis= list(title = "Value"))
View(time.data)
time.data<- final.birth %>% select(time) %>% t()
plot_ly(data = final.birth, x = ~final.birth$name,
y= time.data, type = 'bar',
hoverinfo = 'text',
# sets hover text
text = ~paste("Region:", final.birth$name, "<br>","Value:",time.data))%>%
layout(xaxis= list(title = "Regions"),
yaxis= list(title = "Value"))
View(time.data)
time.data<- final.birth %>% select(time)
year <- 1968
time <- toString(year)
print(time)
time.data<- final.birth %>% select(name,time)
View(time.data)
plot_ly(data = time.data, x = ~time.data$name,
y= ~time.data[2], type = 'bar',
hoverinfo = 'text',
# sets hover text
text = ~paste("Region:", final.birth$name, "<br>","Value:",time.data[2]))%>%
layout(xaxis= list(title = "Regions"),
yaxis= list(title = "Value"))
View(time.data)
time.data[2]
time.data<- final.birth %>% select(name,time)
names(time.data[2]) <- "year"
View(time.data)
View(time.data)
names(time.data)[2] <- "year"
View(time.data)
plot_ly(data = time.data, x = ~time.data$name,
y= ~time.data$year, type = 'bar',
hoverinfo = 'text',
# sets hover text
text = ~paste("Region:", final.birth$name, "<br>","Value:",time.data[2]))%>%
layout(xaxis= list(title = "Regions"),
yaxis= list(title = "Value"))
bar.region <-
plot_ly(data = time.data, x = ~time.data$name,
y= ~time.data$year, type = 'bar',
hoverinfo = 'text',
# sets hover text
text = ~paste("Region:", final.birth$name, "<br>","Value:",time.data$year))%>%
layout(xaxis= list(title = "Regions"),
yaxis= list(title = "Value"))
plot_ly(data = time.data, x = ~time.data$name,
y= ~time.data$year, type = 'bar',
hoverinfo = 'text',
# sets hover text
text = ~paste("Region:", final.birth$name, "<br>","Value:",time.data$year))%>%
layout(xaxis= list(title = "Regions"),
yaxis= list(title = "Value"))
bar.region <-
plot_ly(data = time.data, x = ~time.data$name,
y= ~time.data$year, type = 'bar',
hoverinfo = 'text',
# sets hover text
text = ~paste("Region:", final.birth$name, "<br>","Value:",time.data$year))%>%
layout(xaxis= list(title = "Regions"),
yaxis= list(title = "Value"))
runApp()
runApp()
runApp()
runApp()
runApp()
View(final.pop)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rm(birth.all)
library(dplyr)
# read datas
birth.rate <- read.csv("data/birth_rate.csv", stringsAsFactors = FALSE) %>%
select(-Indicator.Name,-Indicator.Code,-X2016,-X2017)
pop <- read.csv("data/population.csv", stringsAsFactors = FALSE)%>%
select(-Indicator.Name,-Indicator.Code,-X2016,-X2017)
pop.rate <- read.csv("data/population_growth.csv", stringsAsFactors = FALSE)%>%
select(-Indicator.Name,-Indicator.Code,-X2016,-X2017)
GDP.rate <- read.csv("data/GDP_in_countries.csv", stringsAsFactors = FALSE) %>%
select(-Indicator.Name,-Indicator.Code,-X2016,-X2017)
immigration <- read.csv("data/immigration.csv", stringsAsFactors = FALSE)%>%
select(-Indicator.Name,-Indicator.Code,-X2016,-X2017)
region <- read.csv("data/income_group.csv", stringsAsFactors = FALSE) %>%
select(Country.Code, Region)
# get rid of "X" from the column names
names(birth.rate) <- gsub("X","",names(birth.rate),fixed = TRUE)
names(pop) <- gsub("X","",names(pop),fixed = TRUE)
names(pop.rate) <- gsub("X","",names(pop.rate),fixed = TRUE)
names(GDP.rate) <- gsub("X","",names(GDP.rate),fixed = TRUE)
# semi.birth.rate
birth.all <- full_join(region, birth.rate, by= "Country.Code")
birth.all = birth.all[-264,]
semi.birth <- birth.all[!(birth.all$Region==""),] %>%
select(-Country.Name, -Country.Code)
rm(birth.rate)
rm(birth.all)
# semi.pop
pop.all <- full_join(region, pop, by= "Country.Code")
pop.all = pop.all[-264,]
semi.pop <- pop.all[!(pop.all$Region==""),] %>%
select(-Country.Name, -Country.Code)
rm(pop.all)
rm(pop)
#semi.pop.rate
pop.rate.all <- full_join(region, pop.rate, by= "Country.Code")
pop.rete.all = pop.rate.all[-264,]
semi.pop.rate <- pop.rate.all[!(pop.rate.all$Region==""),] %>%
select(-Country.Name, -Country.Code)
rm(pop.rate.all)
rm(pop.rate)
#semi.GDP
GDP.all <- full_join(region, GDP.rate, by= "Country.Code")
GDP.all = GDP.all[-264,]
semi.GDP.rate <- GDP.all[!(GDP.all$Region==""),] %>%
select(-Country.Name, -Country.Code)
rm(GDP.all)
rm(GDP.rate)
# group into region and calculate mean(average)
group.region <- function(dataframe){
dataframe %>% group_by(dataframe$Region) %>%
summarise_all(funs(mean(., na.rm = T)))
}
final.birth <- group.region(semi.birth)
names(final.birth)[1] <- "name"
rm(semi.birth)
final.pop <- group.region(semi.pop)
names(final.pop)[1] <- "name"
rm(semi.pop)
final.pop.rate <- group.region(semi.pop.rate)
final.pop.rate <- final.pop.rate[-8,] %>% as.data.frame()
names(final.pop.rate)[1] <- "name"
rm(semi.pop.rate)
final.GDP <- group.region(semi.GDP.rate)
names(final.GDP)[1] <- "name"
rm(semi.GDP.rate)
library(dplyr)
# read datas
birth.rate <- read.csv("data/birth_rate.csv", stringsAsFactors = FALSE) %>%
select(-Indicator.Name,-Indicator.Code,-X2016,-X2017)
pop <- read.csv("data/population.csv", stringsAsFactors = FALSE)%>%
select(-Indicator.Name,-Indicator.Code,-X2016,-X2017)
pop.rate <- read.csv("data/population_growth.csv", stringsAsFactors = FALSE)%>%
select(-Indicator.Name,-Indicator.Code,-X2016,-X2017)
GDP.rate <- read.csv("data/GDP_in_countries.csv", stringsAsFactors = FALSE) %>%
select(-Indicator.Name,-Indicator.Code,-X2016,-X2017)
immigration <- read.csv("data/immigration.csv", stringsAsFactors = FALSE)%>%
select(-Indicator.Name,-Indicator.Code,-X2016,-X2017)
region <- read.csv("data/income_group.csv", stringsAsFactors = FALSE) %>%
select(Country.Code, Region)
# get rid of "X" from the column names
names(birth.rate) <- gsub("X","",names(birth.rate),fixed = TRUE)
names(pop) <- gsub("X","",names(pop),fixed = TRUE)
names(pop.rate) <- gsub("X","",names(pop.rate),fixed = TRUE)
names(GDP.rate) <- gsub("X","",names(GDP.rate),fixed = TRUE)
# semi.birth.rate
birth.all <- full_join(region, birth.rate, by= "Country.Code")
birth.all = birth.all[-264,]
semi.birth <- birth.all[!(birth.all$Region==""),] %>%
select(-Country.Name, -Country.Code)
rm(birth.rate)
rm(birth.all)
# semi.pop
pop.all <- full_join(region, pop, by= "Country.Code")
pop.all = pop.all[-264,]
semi.pop <- pop.all[!(pop.all$Region==""),] %>%
select(-Country.Name, -Country.Code)
rm(pop.all)
rm(pop)
#semi.pop.rate
pop.rate.all <- full_join(region, pop.rate, by= "Country.Code")
pop.rete.all = pop.rate.all[-264,]
semi.pop.rate <- pop.rate.all[!(pop.rate.all$Region==""),] %>%
select(-Country.Name, -Country.Code)
rm(pop.rate.all)
rm(pop.rate)
#semi.GDP
GDP.all <- full_join(region, GDP.rate, by= "Country.Code")
GDP.all = GDP.all[-264,]
semi.GDP.rate <- GDP.all[!(GDP.all$Region==""),] %>%
select(-Country.Name, -Country.Code)
rm(GDP.all)
rm(GDP.rate)
# group into region and calculate mean(average)
group.region <- function(dataframe){
dataframe %>% group_by(dataframe$Region) %>%
summarise_all(funs(mean(., na.rm = T)))
}
final.birth <- group.region(semi.birth)
names(final.birth)[1] <- "name"
rm(semi.birth)
final.pop <- group.region(semi.pop)
names(final.pop)[1] <- "name"
rm(semi.pop)
final.pop.rate <- group.region(semi.pop.rate)
final.pop.rate <- final.pop.rate[-8,] %>% as.data.frame()
names(final.pop.rate)[1] <- "name"
rm(semi.pop.rate)
final.GDP <- group.region(semi.GDP.rate)
names(final.GDP)[1] <- "name"
rm(semi.GDP.rate)
library(dplyr)
# read datas
birth.rate <- read.csv("data/birth_rate.csv", stringsAsFactors = FALSE) %>%
select(-Indicator.Name,-Indicator.Code,-X2016,-X2017)
pop <- read.csv("data/population.csv", stringsAsFactors = FALSE)%>%
select(-Indicator.Name,-Indicator.Code,-X2016,-X2017)
pop.rate <- read.csv("data/population_growth.csv", stringsAsFactors = FALSE)%>%
select(-Indicator.Name,-Indicator.Code,-X2016,-X2017)
GDP.rate <- read.csv("data/GDP_in_countries.csv", stringsAsFactors = FALSE) %>%
select(-Indicator.Name,-Indicator.Code,-X2016,-X2017)
region <- read.csv("data/income_group.csv", stringsAsFactors = FALSE) %>%
select(Country.Code, Region)
# get rid of "X" from the column names
names(birth.rate) <- gsub("X","",names(birth.rate),fixed = TRUE)
names(pop) <- gsub("X","",names(pop),fixed = TRUE)
names(pop.rate) <- gsub("X","",names(pop.rate),fixed = TRUE)
names(GDP.rate) <- gsub("X","",names(GDP.rate),fixed = TRUE)
# semi.birth.rate
birth.all <- full_join(region, birth.rate, by= "Country.Code")
birth.all = birth.all[-264,]
semi.birth <- birth.all[!(birth.all$Region==""),] %>%
select(-Country.Name, -Country.Code)
rm(birth.rate)
rm(birth.all)
# semi.pop
pop.all <- full_join(region, pop, by= "Country.Code")
pop.all = pop.all[-264,]
semi.pop <- pop.all[!(pop.all$Region==""),] %>%
select(-Country.Name, -Country.Code)
rm(pop.all)
rm(pop)
#semi.pop.rate
pop.rate.all <- full_join(region, pop.rate, by= "Country.Code")
pop.rate.all = pop.rate.all[-264,]
semi.pop.rate <- pop.rate.all[!(pop.rate.all$Region==""),] %>%
select(-Country.Name, -Country.Code)
rm(pop.rate.all)
rm(pop.rate)
rm(region)
#semi.GDP
GDP.all <- full_join(region, GDP.rate, by= "Country.Code")
GDP.all = GDP.all[-264,]
semi.GDP.rate <- GDP.all[!(GDP.all$Region==""),] %>%
select(-Country.Name, -Country.Code)
rm(GDP.all)
rm(GDP.rate)
# group into region and calculate mean(average)
group.region <- function(dataframe){
dataframe %>% group_by(dataframe$Region) %>%
summarise_all(funs(mean(., na.rm = T)))
}
final.birth <- group.region(semi.birth)
names(final.birth)[1] <- "name"
rm(semi.birth)
final.pop <- group.region(semi.pop)
names(final.pop)[1] <- "name"
rm(semi.pop)
final.pop.rate <- group.region(semi.pop.rate)
final.pop.rate <- final.pop.rate[-8,] %>% as.data.frame()
names(final.pop.rate)[1] <- "name"
rm(semi.pop.rate)
final.GDP <- group.region(semi.GDP.rate)
names(final.GDP)[1] <- "name"
rm(semi.GDP.rate)
library(dplyr)
# read datas
birth.rate <- read.csv("data/birth_rate.csv", stringsAsFactors = FALSE) %>%
select(-Indicator.Name,-Indicator.Code,-X2016,-X2017)
pop <- read.csv("data/population.csv", stringsAsFactors = FALSE)%>%
select(-Indicator.Name,-Indicator.Code,-X2016,-X2017)
pop.rate <- read.csv("data/population_growth.csv", stringsAsFactors = FALSE)%>%
select(-Indicator.Name,-Indicator.Code,-X2016,-X2017)
GDP.rate <- read.csv("data/GDP_in_countries.csv", stringsAsFactors = FALSE) %>%
select(-Indicator.Name,-Indicator.Code,-X2016,-X2017)
region <- read.csv("data/income_group.csv", stringsAsFactors = FALSE) %>%
select(Country.Code, Region)
# get rid of "X" from the column names
names(birth.rate) <- gsub("X","",names(birth.rate),fixed = TRUE)
names(pop) <- gsub("X","",names(pop),fixed = TRUE)
names(pop.rate) <- gsub("X","",names(pop.rate),fixed = TRUE)
names(GDP.rate) <- gsub("X","",names(GDP.rate),fixed = TRUE)
# semi.birth.rate
birth.all <- full_join(region, birth.rate, by= "Country.Code")
birth.all = birth.all[-264,]
semi.birth <- birth.all[!(birth.all$Region==""),] %>%
select(-Country.Name, -Country.Code)
rm(birth.rate)
rm(birth.all)
pop.all <- full_join(region, pop, by= "Country.Code")
pop.all = pop.all[-264,]
semi.pop <- pop.all[!(pop.all$Region==""),] %>%
select(-Country.Name, -Country.Code)
rm(pop.all)
rm(pop)
pop.rate.all <- full_join(region, pop.rate, by= "Country.Code")
pop.rate.all = pop.rate.all[-264,]
semi.pop.rate <- pop.rate.all[!(pop.rate.all$Region==""),] %>%
select(-Country.Name, -Country.Code)
rm(pop.rate.all)
rm(pop.rate)
rm(region)
region <- read.csv("data/income_group.csv", stringsAsFactors = FALSE) %>%
select(Country.Code, Region)
pop.all <- full_join(region, pop, by= "Country.Code")
pop.all = pop.all[-264,]
semi.pop <- pop.all[!(pop.all$Region==""),] %>%
select(-Country.Name, -Country.Code)
rm(pop.all)
rm(pop)
pop.rate.all <- full_join(region, pop.rate, by= "Country.Code")
pop.rate.all = pop.rate.all[-264,]
semi.pop.rate <- pop.rate.all[!(pop.rate.all$Region==""),] %>%
select(-Country.Name, -Country.Code)
rm(pop.rate.all)
rm(pop.rate)
GDP.all <- full_join(region, GDP.rate, by= "Country.Code")
GDP.all = GDP.all[-264,]
semi.GDP.rate <- GDP.all[!(GDP.all$Region==""),] %>%
select(-Country.Name, -Country.Code)
rm(GDP.all)
rm(GDP.rate)
rm(region)
group.region <- function(dataframe){
dataframe %>% group_by(dataframe$Region) %>%
summarise_all(funs(mean(., na.rm = T)))
}
final.birth <- group.region(semi.birth)
names(final.birth)[1] <- "name"
rm(semi.birth)
final.pop <- group.region(semi.pop)
names(final.pop)[1] <- "name"
rm(semi.pop)
final.pop.rate <- group.region(semi.pop.rate)
final.pop.rate <- final.pop.rate[-8,] %>% as.data.frame()
names(final.pop.rate)[1] <- "name"
rm(semi.pop.rate)
final.GDP <- group.region(semi.GDP.rate)
names(final.GDP)[1] <- "name"
rm(semi.GDP.rate)
runApp()
shiny::runApp()
View(stat_comparison)
runApp()
runApp()
