shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
loadDataframe <- function(){
birth_rate <- read.csv("data/birth_rate.csv")
GDP <- read.csv("data/GDP_in_countries.csv")
population <- read.csv("data/population.csv")
population_growth <- read.csv("data/population_growth.csv")
}
data <- loadDataframe <- function(){
birth_rate <- read.csv("data/birth_rate.csv")
GDP <- read.csv("data/GDP_in_countries.csv")
population <- read.csv("data/population.csv")
population_growth <- read.csv("data/population_growth.csv")
}
data
data <- loadDataframe()
data
View(data)
runApp()
runApp()
runApp()
install.packages("plotly")
runApp()
runApp()
runApp('statistic_chronological_comparison')
runApp('statistic_chronological_comparison')
library(plotly)
install.packages("plotly")
runApp('statistic_chronological_comparison')
runApp()
runApp()
data <- makeFullDataframe()
data
View(data)
runApp()
shinyUI(
navbarPage("birth rate analysis", theme = shinytheme("cerulean"),
####example tab####
tabPanel("example",
sidebarLayout(
sidebarPanel(
textOutput("sampleSidebarOutput")
),
mainPanel(
textOutput("sampleMainPanelOutput")
)
)
),
####map tab####
tabPanel("world map explorer",
sidebarLayout(
sidebarPanel(
sliderInput("map_slider_year", min = 1960, max = 2017, value = 2000, label = "year")
),
mainPanel(
leafletOutput("worldMapExplorer")
)
)
),
####stat comparison tab####
birth_rate <- read.csv("data/birth_rate.csv"),
GDP <- read.csv("data/GDP_in_countries.csv"),
population <- read.csv("data/population.csv"),
population_growth <- read.csv("data/population_growth.csv"),
statistic <- list("birth rate" = "birth_rate",
"GDP" = "GDP_in_countries",
"population" = "population",
"population growth" = "population_growth"),
tabPanel("statistic chronological comparison",
sidebarLayout(
sidebarPanel(
selectInput("country",
label = "Country",
choices = birth_rate$Country.Name,
width = '100%'
),
radioButtons("statistic1",
label = "Statistic 1",
choices = statistic,
width = '100%'
),
radioButtons("statistic2",
label = "Statistic 2",
choices = statistic,
width = '100%'
)
),
mainPanel(
plotlyOutput("comparison")
)
)
),
####grouped comparison tab####
tabPanel("grouped comparison"
),
####markdown tabs####
navbarMenu("About",
tabPanel("Using this app",
includeMarkdown("md/instructions.md")
),
tabPanel("Contributions",
includeMarkdown("md/contrib.md")
),
tabPanel("Sources",
includeMarkdown("md/sources.md")
),
tabPanel("Conclusions and Discussions",
includeMarkdown("md/conclusions.md")
)
)
)
)
birth_rate <- read.csv("data/birth_rate.csv")
runApp()
source("contributorScripts/sammi.R")
runApp()
values2 <- as.numeric(statistic2)
runApp()
runApp()
